webpackJsonp([1],{"/GLF":function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="column">\r\n      <div fxLayout=\'row\'>\r\n        <div fxFlex=\'49%\'>\r\n          <mat-form-field class="tech-voice-full-width">\r\n            <input matInput  [(ngModel)]="model.serial" name="serial" placeholder="ONT Serial Number">\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\'49%\' fxFlexOffset=\'2%\'>\r\n          <mat-form-field class="tech-voice-full-width">\r\n            <input matInput  [(ngModel)]="model.phoneNumber" name="phonenumber" placeholder="Customer\u2019s Provisioned Number">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <mat-form-field>\r\n        <textarea [(ngModel)]="model.handset" matInput placeholder="What is seen on the handset?" matTextareaAutosize></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <textarea [(ngModel)]="model.make" matInput placeholder="Could the customer make calls from the phone?" matTextareaAutosize></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <textarea [(ngModel)]="model.receive" matInput placeholder="Could the customer receive calls on the phone?" matTextareaAutosize></textarea>\r\n      </mat-form-field>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="tech-voice-full-width">\r\n          <mat-select [(ngModel)]="model.phoneType" name="phoneTypes" placeholder="Type of Phone (Cordless or Corded)" >\r\n            <mat-option *ngFor="let type of phoneType" [value]="type">{{ type }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>    \r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Does the ONT have the latest software 3FE56773AFHA98?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.software">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Is the phone connected to TEL1?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.tel1">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n          <h4 class="mat-h4">Is the customer listed as DUNNED?</h4>\r\n          <mat-radio-group class="voice-radio-group" [(ngModel)]="model.dunned">\r\n            <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n              {{option}}\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <br>\r\n        <div fxLayout="column">\r\n            <h4 class="mat-h4">Is the phone number registered on the ONT GUI?</h4>\r\n            <mat-radio-group class="voice-radio-group" [(ngModel)]="model.registered">\r\n              <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n                {{option}}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n      \x3c!-- <div fxLayout="column">\r\n        <h4 class="mat-h4">Is the xml file on the ONT (seen on AMS as SN.xml)?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.xml">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Is the preconfig file on the ONT (PREMASSY004)?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.preconfig">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Is the POTs port created on the AMS?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.pots">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Is a mac address learned under the virtual UNI?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.mac">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Is a DHCP IP assigned?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.dhcp">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      \r\n      <br>\r\n            \r\n     \r\n      <br>\r\n      \r\n      \r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Was the Virtual UNI Locked and Unlocked?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.uni">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="column">\r\n        <h4 class="mat-h4">Was the VOIP Service Locked and Unlocked?</h4>\r\n        <mat-radio-group class="voice-radio-group" [(ngModel)]="model.voip">\r\n          <mat-radio-button class="voice-radio-button" *ngFor="let option of options" [value]="option">\r\n            {{option}}\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <br> --\x3e\r\n    \r\n  </div>\r\n</div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="tech-voice-full-width">\r\n          <textarea #security matInput matTextareaAutosize readonly>1. ONT Serial Number: {{model.serial}}\r\n\r\n2. Does the ONT have the latest software 3FE56773AFHA98?: {{model.software}}\r\n\r\n3. Is the phone connected to TEL1?: {{model.tel1}}\r\n\r\n4. What is seen on the handset?: {{model.handset}}\r\n\r\n5. Is the phone number registered on the ONT GUI?: {{model.registered}}\r\n\r\n6. Could the customer make calls from the phone?: {{model.make}}\r\n\r\n7. Could the customer receive calls on the phone?: {{model.receive}}\r\n\r\n8. Is the customer listed as DUNNED?: {{model.dunned}}\r\n\r\n9. Type of Phone (Cordless or corded)?: {{model.phoneType}}\r\n\r\n10. Customer\u2019s Provisioned Number: {{model.phoneNumber}}\r\n\r\n11. Is the preconfig file on the ONT (PREMASSY004)?: {{model.preconfig}}\r\n\r\n12. Is the xml file on the ONT (seen on AMS as SN.xml)?: {{model.xml}}\r\n\r\n13. Is the POTs port created on the AMS?: {{model.pots}}\r\n\r\n14. Is a mac address learned under the virtual UNI?: {{model.mac}}\r\n\r\n15. Is a DHCP IP assigned?: {{model.dhcp}}\r\n\r\n16. Was the Virtual UNI Locked and Unlocked?: {{model.uni}}\r\n\r\n17. Was the VOIP Service Locked and Unlocked?: {{model.voip}}</textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'security\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>'},0:function(e,t,n){e.exports=n("x35b")},"14gY":function(e,t){e.exports=".csp-full-width {\r\n  width: 100%;\r\n}\r\n\r\n.csp-full-width-height {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n"},"1nyp":function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="100%">\r\n        <mat-form-field class="retention-full-width">\r\n          <input [(ngModel)]="model.existingPackage" name="package" matInput placeholder="Existing Package">\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="retention-full-width">\r\n          <input [(ngModel)]="model.promotion" name="promotion" matInput placeholder="Promotion Applied" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="retention-full-width">\r\n          <input [(ngModel)]="model.balance" name="balance" matInput placeholder="Outstanding Figure (from tableau)">\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex>\r\n        <mat-form-field class="retention-full-width">\r\n          <textarea [(ngModel)]="model.reason" name="reason" matInput matTextareaAutosize placeholder="Reason for cancellation" ></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex>\r\n        <mat-form-field class="retention-full-width">\r\n          <textarea [(ngModel)]="model.save" name="save" matInput matTextareaAutosize placeholder="TSP/CSP Save attempt" ></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex matTooltip=" Please note any additional case created regarding a save attempt must be attached to the Retention parent case as a Child case.">\r\n        <mat-form-field class="retention-full-width">\r\n          <input [(ngModel)]="model.saveCase" name="saveCase" matInput placeholder="Case Number created due to save attempt" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="retention-full-width">\r\n          <textarea #retention matInput matTextareaAutosize readonly>Existing Package: {{model.existingPackage}}\r\n\r\nPromotion Applied: {{model.promotion}}\r\n\r\nOutstanding figure (from tableau): {{model.balance}}\r\n\r\nReason for cancellation: {{model.reason}}\r\n\r\nTSP/CSP Save attempt: {{model.save}}\r\n\r\nCase Number created due to save attempt: {{model.saveCase}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'retention\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},"2nZa":function(e,t){e.exports=".toolbar-spacer {\r\n    -webkit-box-flex: 1;\r\n        -ms-flex: 1 1 auto;\r\n            flex: 1 1 auto;\r\n  }"},"46tx":function(e,t){e.exports=".highspeed-full-width {\r\n  width: 100%;\r\n}\r\n"},"5xMp":function(e,t){e.exports='<mat-toolbar color="primary">\r\n  <span>{{ title }} </span>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container fullscreen>\r\n  <mat-sidenav mode="side" opened="true">\r\n    <mat-nav-list *ngFor="let template of templates">\r\n      <a mat-list-item  [routerLink]= template.url>{{ template.name }}</a>\r\n    </mat-nav-list>\r\n    \x3c!-- <span *ngFor="let template in Templates">{{ template.name }} Template</span> --\x3e\r\n  </mat-sidenav>\r\n  <div class="my-content"><router-outlet></router-outlet></div>\r\n</mat-sidenav-container>\r\n'},EKpD:function(e,t){e.exports='.technical-full-width {\r\n  width: 100%;\r\n}\r\n\r\n[aria-hidden="true"] {\r\n  opacity: 0;\r\n  position: absolute;\r\n  z-index: -9999;\r\n  pointer-events: none;\r\n}\r\n'},Epgv:function(e,t){e.exports=".relocation-full-width {\r\n  width: 100%;\r\n}\r\n"},FJBP:function(e,t){e.exports='<headerbar>\r\n  <span title>{{title}}</span>\r\n</headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <form>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="loyal-full-width">\r\n            <input [(ngModel)]="model.card" name="card" matInput placeholder="Loyalty Card Number" >\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset=2% fxFlex=49%>\r\n          <mat-form-field class="loyal-full-width">\r\n            <input [(ngModel)]="model.invoice" name="invoice" matInput placeholder="Invoice Number" >\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="loyal-full-width">\r\n            <input [(ngModel)]="model.amountPaid" name="amount" matInput placeholder="Amount Paid" >\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset=2% fxFlex=49%>\r\n          <mat-form-field class="loyal-full-width">\r\n            <input [(ngModel)]="model.date" name="date"  matInput [matDatepicker]="myDatepicker" placeholder="Date invoice Paid">\r\n            <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatepicker></mat-datepicker>\r\n          </mat-form-field>          \r\n        </div>\r\n      </div>\r\n      <mat-form-field class="loyal-full-width-height">\r\n        <textarea matTextareaAutosize [(ngModel)]="model.description" name="description" matInput placeholder="Description"></textarea>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n        <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="loyal-full-width-height">\r\n          <textarea #loyalty matInput matTextareaAutosize readonly>Loyalty Card Number: {{model.card}}\r\n\r\nInvoice Number: {{model.invoice}}\r\n\r\nDate Invoice Paid: {{model.date | date: \'mediumDate\'}}\r\n\r\nAmount Paid: ${{model.amountPaid}}\r\n\r\nDescription: {{model.description}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'loyalty\'>COPY</button>\r\n        <button mat-button (click)=\'reset()\'>CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},J84j:function(e,t){e.exports='<div>\r\n  <h1 mat-dialog-title>Contact List</h1>\r\n</div>\r\n<mat-dialog-content>\r\n  <br>\r\n  <mat-accordion class="headers-align">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Contact Centre\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          Hunt: 5301\r\n          <mat-icon>contacts</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n        <h3 mat-subheader>Leaders</h3>\r\n        <mat-list-item *ngFor="let person of contactCentreLeaders">\r\n          <mat-icon mat-list-icon>supervisor_account</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <h3 mat-subheader>Senior Technical Support Professionals</h3>\r\n        <mat-list-item *ngFor="let person of seniorTSP">\r\n          <mat-icon mat-list-icon>build</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <h3 mat-subheader>Technical Support Professionals</h3>\r\n        <mat-list-item *ngFor="let person of tsp">\r\n          <mat-icon mat-list-icon>build</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <h3 mat-subheader>Customer Support Professionals</h3>\r\n        <mat-list-item *ngFor="let person of csp">\r\n          <mat-icon mat-list-icon>face</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Dispatch\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          Hunt: 1999\r\n          <mat-icon>local_shipping</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n        <h3 mat-subheader>Dispatchers</h3>\r\n        <mat-list-item *ngFor="let person of dispatch">\r\n            <mat-icon mat-list-icon>local_shipping</mat-icon>\r\n            <h4 mat-line>{{person.employeeName}}</h4>\r\n            <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Finance & Accounting  \r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <hr>\r\n        <mat-icon>account_balance</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n        <mat-list-item *ngFor="let person of finance">\r\n          <mat-icon mat-list-icon>account_balance</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>{{person.position}}</p>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Human Resources\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            <hr>\r\n          <mat-icon>people</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-list>\r\n          <mat-list-item *ngFor="let person of hr">\r\n            <mat-icon mat-list-icon>people</mat-icon>\r\n            <h4 mat-line>{{person.employeeName}}</h4>\r\n            <p mat-line>{{person.position}}</p>\r\n            <p mat-line>Extension: {{person.extension}}</p>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            I.T\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            <hr>\r\n            <mat-icon>computer</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-list>\r\n            <mat-list-item *ngFor="let person of it">\r\n              <mat-icon mat-list-icon>computer</mat-icon>\r\n              <h4 mat-line>{{person.employeeName}}</h4>\r\n              <p mat-line>Extension: {{person.extension}}</p>\r\n            </mat-list-item>\r\n          </mat-list>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Miscellaneous\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              <hr>\r\n            \x3c!-- <mat-icon>settings</mat-icon> --\x3e\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <mat-list>\r\n            <mat-list-item *ngFor="let person of misc">\r\n              \x3c!-- <mat-icon mat-list-icon>build</mat-icon> --\x3e\r\n              <h4 mat-line>{{person.employeeName}}</h4>\r\n              <p mat-line>{{person.position}}</p>\r\n              <p mat-line>Extension: {{person.extension}}</p>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          NOC\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <hr>\r\n        <mat-icon>settings</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n        <mat-list-item *ngFor="let person of noc">\r\n          <mat-icon mat-list-icon>build</mat-icon>\r\n          <h4 mat-line>{{person.employeeName}}</h4>\r\n          <p mat-line>Extension: {{person.extension}}</p>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Sales (Executive)\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <hr>\r\n          <mat-icon>business</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n          <mat-list-item *ngFor="let person of salesExecutive">\r\n            <mat-icon mat-list-icon>business</mat-icon>\r\n            <h4 mat-line>{{person.employeeName}}</h4>\r\n            <p mat-line>Extension: {{person.extension}}</p>\r\n          </mat-list-item>\r\n        </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Sales (Residential)\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          Hunt: 1499\r\n          <mat-icon>shopping_cart</mat-icon>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n          <mat-list-item *ngFor="let person of salesResidential">\r\n            <mat-icon mat-list-icon>shopping_cart</mat-icon>\r\n            <h4 mat-line>{{person.employeeName}}</h4>\r\n            <p mat-line>Extension: {{person.extension}}</p>\r\n          </mat-list-item>\r\n        </mat-list>\r\n    </mat-expansion-panel>\r\n\r\n  </mat-accordion>\r\n  <br>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]="true">Close</button>\r\n</mat-dialog-actions>'},Jnfr:function(e,t){function n(e){return Promise.resolve().then(function(){throw new Error("Cannot find module '"+e+"'.")})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="Jnfr"},K8sn:function(e,t){e.exports="\r\n.tech-voice-full-width {\r\n  width: 100%;\r\n}\r\n\r\n.voice-tab-content {\r\n  padding: 16px;\r\n}\r\n\r\nvoice-radio-group {\r\n  display: -webkit-inline-box;\r\n  display: -ms-inline-flexbox;\r\n  display: inline-flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n      -ms-flex-direction: row;\r\n          flex-direction: row;\r\n}\r\n\r\n.voice-radio-button {\r\n  /* width: 80%; */\r\n  margin-right: 35px;\r\n}\r\n\r\n.voice-selected-value {\r\n  margin: 50px 0;\r\n}"},KQd6:function(e,t){e.exports=".loyal-full-width {\r\n  width: 100%;\r\n}\r\n\r\n.loyal-full-width-height {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n"},Ki9q:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <form>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <mat-select [(ngModel)]="model.cycle" name="cycle" placeholder="Billing Cycle">\r\n              <mat-option *ngFor="let cycle of cycles" [value]="cycle.value">{{ cycle.value }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <input [(ngModel)]="model.area" name="area" matInput placeholder="Area Customer is moving to" >\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="100%">\r\n          <mat-form-field class="relocation-full-width">\r\n              <input [(ngModel)]="model.oldPackage" name="oldPackage" matInput placeholder="Existing Package">\r\n            \x3c!-- <input [(ngModel)]="model.oldPackage" name="oldPackage" matInput placeholder="Existing Package" [matAutocomplete]="existing"> --\x3e\r\n            \x3c!-- <mat-autocomplete #existing="matAutocomplete">\r\n                <mat-option *ngFor="let package of packages" [value]="package.name">{{ package.name }}</mat-option>\r\n            </mat-autocomplete> --\x3e\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="100%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <mat-select multiple [(ngModel)]="model.oldAddons" name="oldAddons" placeholder="Existing Add-on Packages">\r\n              <mat-option *ngFor="let addon of addons" [value]="addon.name">{{ addon.name }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="100%">\r\n          <mat-form-field class="relocation-full-width">\r\n              <input [(ngModel)]="model.newPackage" name="newPackage" matInput placeholder="New Package Requested">\r\n            \x3c!-- <input [(ngModel)]="model.newPackage" name="newPackage" matInput placeholder="New Package Requested" [matAutocomplete]="requested"> --\x3e\r\n            \x3c!-- <mat-autocomplete #requested="matAutocomplete">\r\n                <mat-option *ngFor="let package of packages" [value]="package.name">{{ package.name }}</mat-option>\r\n            </mat-autocomplete> --\x3e\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="100%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <mat-select multiple [(ngModel)]="model.newAddons" name="newAddons" placeholder="New package Add-on Packages">\r\n              <mat-option *ngFor="let addon of addons" [value]="addon.name">{{ addon.name }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <input matInput [(ngModel)]="model.installDate" name="installdate" [matDatepicker]="installDatepicker" placeholder="Installation Date?">\r\n            <mat-datepicker-toggle matSuffix [for]="installDatepicker"></mat-datepicker-toggle>\r\n            <mat-datepicker #installDatepicker></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <input matInput [(ngModel)]="model.removalDate" name="removaldate" [matDatepicker]="myDatepicker" placeholder="Removal Date">\r\n            <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatepicker></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <input [(ngModel)]="model.bundle" name="bundle" matInput placeholder="Bundle to be cancelled" >\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="relocation-full-width">\r\n            <mat-select [(ngModel)]="model.rebate" name="rebate" placeholder="Rebate Needed?">\r\n              <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="row">\r\n          <mat-form-field class="relocation-full-width">\r\n            <textarea matInput matTextareaAutosize [(ngModel)]="model.calculation" name="calculation" placeholder="Rebate Calculation"></textarea>\r\n          </mat-form-field>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="row">\r\n        <mat-form-field class="relocation-full-width">\r\n          <input [(ngModel)]="model.amount" name="amount" matInput placeholder="Rebate" >\r\n        </mat-form-field>\r\n      </div>\r\n      <br>\r\n      <div fxLayout="row">\r\n        <mat-form-field class="relocation-full-width">\r\n          <textarea matInput matTextareaAutosize [(ngModel)]="model.info" name="info" placeholder="Any Additional Info"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="relocation-full-width">\r\n          <textarea #relocation matInput matTextareaAutosize readonly>Bill Cycle: {{model.cycle}}\r\n\r\nArea Customer Is Moving To: {{model.area}}\r\n\r\nExisting Package: {{model.oldPackage}}\r\n\r\nAdd-on Packages: {{model.oldAddons}}\r\n\r\nNew Package Requested: {{model.newPackage}}\r\n\r\nAdd-on Packages: {{model.newAddons}}\r\n\r\nDate for new install: {{model.installDate | date: \'mediumDate\'}}\r\n\r\nRequested Date for removal: {{model.removalDate | date: \'mediumDate\'}}\r\n\r\nBundle Number to cancelled: {{model.bundle}}\r\n\r\nRebate Needed: {{model.rebate}}\r\n\r\nRebate Calculation: {{model.calculation}}\r\n\r\nRebate Needed: {{model.amount}}\r\n\r\nAny additional information: {{model.info}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'relocation\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},LX5Y:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <form>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="csp-full-width">\r\n            <mat-select multiple [(ngModel)]="model.issue" name="issuetype" placeholder="What is the reported Service Issue?">\r\n              <mat-option *ngFor="let serviceIssue of serviceIssues" [value]="serviceIssue.value">{{ serviceIssue.value }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexAlign="center" fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="csp-full-width">\r\n            <input matInput [(ngModel)]="model.date" name="date" [matDatepicker]="myDatepicker" placeholder="Date when issue first surfaced">\r\n            <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatepicker></mat-datepicker>\r\n          </mat-form-field>          \r\n        </div>\r\n      </div>\r\n      <mat-form-field class="csp-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.iptv" name="iptv" placeholder="IPTV Only"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field class="csp-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.internet" name="internet" placeholder="Internet Only"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field class="csp-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.voice" name="voice" placeholder="Voice Only"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field class="csp-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.both" name="both" placeholder="Issues with multiple services"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field class="csp-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.info" name="info" placeholder="Additional Info"></textarea>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="csp-full-width-height">\r\n          <textarea #csp matInput matTextareaAutosize readonly>What is the reported Service Issue?: {{model.issue}}\r\n\r\nDate when issue first surfaced: {{model.date | date: \'mediumDate\'}}\r\n\r\nIPTV Only: {{model.iptv}}\r\n\r\nInternet Only: {{model.internet}}\r\n\r\nVoice Only: {{model.voice}}\r\n\r\nIssues with multiple services: {{model.both}}\r\n\r\nAdditional Info: {{model.info}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'csp\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},MVUB:function(e,t){e.exports=".forward-full-width {\r\n  width: 100%;\r\n}\r\n\r\nexample-radio-group {\r\n  display: -webkit-inline-box;\r\n  display: -ms-inline-flexbox;\r\n  display: inline-flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n      -ms-flex-direction: row;\r\n          flex-direction: row;\r\n}\r\n\r\n.example-radio-button {\r\n  /* width: 80%; */\r\n  margin-right: 40px;\r\n}\r\n\r\n.example-selected-value {\r\n  margin: 50px 0;\r\n}\r\n"},MyHe:function(e,t){e.exports=""},"QEU/":function(e,t){e.exports=".security-full-width {\r\n    width: 100%;\r\n  }\r\n\r\n  .security-tab-content {\r\n    padding: 16px;\r\n  }\r\n\r\n  security-radio-group {\r\n    display: -webkit-inline-box;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -webkit-box-orient: horizontal;\r\n    -webkit-box-direction: normal;\r\n        -ms-flex-direction: row;\r\n            flex-direction: row;\r\n  }\r\n\r\n  .security-radio-button {\r\n    /* width: 80%; */\r\n    margin-right: 40px;\r\n  }\r\n\r\n  .security-selected-value {\r\n    margin: 50px 0;\r\n  }\r\n  "},RMud:function(e,t){e.exports=".retention-full-width {\r\n  width: 100%;\r\n}\r\n"},XFdh:function(e,t){e.exports='<headerbar>\r\n  <span title>{{title}}</span>\r\n</headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="billing-full-width">\r\n          <input [(ngModel)]="model.balance" name="balance" matInput placeholder="Total Outstanding Amount (Tableau)" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="billing-full-width">\r\n          <input [(ngModel)]="model.due" name="due" matInput placeholder="Amount Due" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="billing-full-width">\r\n          <mat-select [(ngModel)]="model.cycle" name="cycle" placeholder="Billing Cycle">\r\n            <mat-option *ngFor="let cycle of cycles" [value]="cycle.value">{{ cycle.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="billing-full-width">\r\n          <input [(ngModel)]="model.account" name="account" matInput placeholder="Account Number Requested" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="billing-full-width">\r\n          <mat-select [(ngModel)]="model.verified" name="verified" placeholder="I.D Verified">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <mat-form-field class="billing-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.comments" name="comments" placeholder="Additional Comments"></textarea>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="billing-full-width">\r\n          <textarea #billing matInput matTextareaAutosize readonly>Total Outstanding Amount (Tableau): {{model.balance}}\r\n\r\nAmount Due: {{model.due}}\r\n\r\nBill Cycle: {{model.cycle}}\r\n\r\nAccount Number Requested: {{model.account}}\r\n\r\nI.D. Verified: {{model.verified}}\r\n\r\nAdditional Comments: {{model.comments}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'billing\'>COPY</button>\r\n        <button mat-button (click)=\'reset()\'>CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},XqUv:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row" class="rebate-full-width">\r\n      <div fxFlex="100%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <mat-select [(ngModel)]="model.cycle" name="cycle" placeholder="Billing Cycle">\r\n            <mat-option *ngFor="let cycle of cycles" [value]="cycle.value">{{ cycle.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n            <input [(ngModel)]="model.servicePackage" name="package" matInput placeholder="Package Subscribed">\r\n          \x3c!-- <input [(ngModel)]="model.servicePackage" name="package" matInput placeholder="Package Subscribed" [matAutocomplete]="subscribed"> --\x3e\r\n          \x3c!-- <mat-autocomplete #subscribed="matAutocomplete">\r\n              <mat-option *ngFor="let package of packages" [value]="package.name">{{ package.name }}</mat-option>\r\n          </mat-autocomplete> --\x3e\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <mat-select multiple [(ngModel)]="model.addons" name="addons" placeholder="Additonal Packages (Movies, etc)">\r\n            <mat-option *ngFor="let addon of addons" [value]="addon.name">{{ addon.name }}</mat-option>\r\n          </mat-select>\r\n      </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <mat-select [(ngModel)]="model.stb" name="stb" placeholder="Additonal STB (8083)">\r\n            <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <mat-select [(ngModel)]="model.pvr" name="pvr" placeholder="Additonal PVR (9000)">\r\n            <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <input [(ngModel)]="model.invoice" name="invoice" matInput placeholder="Bill Invoice" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="rebate-full-width">\r\n          <input [(ngModel)]="model.amount" name="amount" matInput placeholder="Bill Amount" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <mat-form-field class="rebate-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.description" name="description" placeholder="Description of the issue"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="rebate-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.rebate" name="rebate" placeholder="Rebate Calculations"></textarea>\r\n    </mat-form-field>\r\n    <br>\r\n    \x3c!-- <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        Rebate Calculator\r\n      </mat-expansion-panel-header>\r\n      <mat-slide-toggle>Same bundle as above?</mat-slide-toggle>\r\n      <br>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <input [(ngModel)]="modelCalculator.serPackage" name="calcpackage" matInput placeholder="Package Subscribed" [matAutocomplete]="subscribed">\r\n            <mat-autocomplete #subscribed="matAutocomplete">\r\n                <mat-option *ngFor="let package of packages" [value]="package">{{ package.name }}</mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <mat-select multiple [(ngModel)]="modelCalculator.addons" name="calcaddons" placeholder="Additonal Packages (Movies, etc)">\r\n              <mat-option *ngFor="let addon of addons" [value]="addon">{{ addon.name }}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <mat-select [(ngModel)]="modelCalculator.stb" name="calcstb" placeholder="Additonal STB (8083)">\r\n              <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <mat-select [(ngModel)]="modelCalculator.pvr" name="calcpvr" placeholder="Additonal PVR (9000)">\r\n              <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <input matInput [(ngModel)]="modelCalculator.startDate" name="startDate" [matDatepicker]="rebateStart" placeholder="Rebate start date">\r\n            <mat-datepicker-toggle matSuffix [for]="rebateStart"></mat-datepicker-toggle>\r\n            <mat-datepicker #rebateStart></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="rebate-full-width">\r\n            <input matInput [(ngModel)]="modelCalculator.endDate" name="endDate" [matDatepicker]="rebateEnd" placeholder="Rebate end date">\r\n            <mat-datepicker-toggle matSuffix [for]="rebateEnd"></mat-datepicker-toggle>\r\n            <mat-datepicker #rebateEnd></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      {{ days }}\r\n      {{model.da}}\r\n      {{modelCalculator.startDate}}\r\n      <br>\r\n    </mat-expansion-panel> --\x3e\r\n\r\n\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="rebate-full-width">\r\n          <textarea #rebate matInput matTextareaAutosize readonly>Existing Package: {{model.servicePackage}}\r\n\r\nAdditional Boxes (8083): {{model.stb}}\r\n\r\nAdditional Boxes (9000): {{model.pvr}}\r\n\r\nAdditional Packages (movie etc):{{model.addons}}\r\n\r\nBill Cycle: {{model.cycle}}\r\n\r\nBill Amount: {{model.amount}}\r\n\r\nInvoice Number: {{model.invoice}}\r\n\r\nDescription of the issue: {{model.description}}\r\n\r\nRebate Calculation done by professional: {{model.rebate}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'rebate\'>COPY</button>\r\n        <button mat-button (click)=\'reset()\'>CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},YRnQ:function(e,t){e.exports=".billing-full-width {\r\n  width: 100%;\r\n}\r\n"},YhhR:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="updown-full-width">\r\n          <input [(ngModel)]="model.oldBundle" name="oldBundle" matInput placeholder="Existing BND#" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="100%">\r\n        \x3c!-- <mat-form-field class="updown-full-width">\r\n          <input [(ngModel)]="model.newBundle" name="newBundle" matInput placeholder="New Package Requested" >\r\n        </mat-form-field> --\x3e\r\n        <mat-form-field class="updown-full-width">\r\n            <input [(ngModel)]="model.newBundle" name="newBundle" matInput placeholder="New Package Requested">\r\n          \x3c!-- <input [(ngModel)]="model.newBundle" name="newBundle" matInput placeholder="New Package Requested" [matAutocomplete]="requested"> --\x3e\r\n          \x3c!-- <mat-autocomplete #requested="matAutocomplete">\r\n              <mat-option *ngFor="let package of packages" [value]="package.name">{{ package.name }}</mat-option>\r\n          </mat-autocomplete> --\x3e\r\n        </mat-form-field>\r\n      </div>      \r\n    </div>\r\n    <div>\r\n      <div fxFlex="100%">\r\n        <mat-form-field class="updown-full-width">\r\n          <mat-select multiple [(ngModel)]="model.addons" name="addons" placeholder="Additional Packages (Movies, etc)" >\r\n            <mat-option *ngFor="let addon of addons" [value]="addon.name">{{ addon.name }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="updown-full-width">\r\n          <mat-select [(ngModel)]="model.stb" name="stb" placeholder="Additional STB (8083)">\r\n            <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n          </mat-select>\r\n      </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="updown-full-width">\r\n          <mat-select [(ngModel)]="model.pvr" name="pvr" placeholder="Additional PVR (9000)">\r\n            <mat-option *ngFor="let index of count" [value]="index">{{ index }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="updown-full-width">\r\n          <mat-select [(ngModel)]="model.onsite" name="onsite" placeholder="Requires Onsite Activation">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="updown-full-width">\r\n          <input [(ngModel)]="model.order" name="workorder" matInput placeholder="Work Order#" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <mat-form-field class="updown-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.info" name="info" placeholder="Any Additional Info"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{ title }} Template Preview</mat-card-title>\r\n        <mat-card-content>\r\n          <mat-form-field class="updown-full-width">\r\n            <textarea #updown matInput matTextareaAutosize readonly>Existing BND#: {{model.oldBundle}}\r\n\r\nNew Package Requested: {{model.newBundle}}\r\n\r\nAdd-on Packages: {{model.addons}}\r\n\r\nAdditional Boxes (8083): {{model.stb}}\r\n\r\nAdditional Boxes (9000): {{model.pvr}}\r\n\r\nOnsite Activation Required: {{model.onsite}}\r\n\r\nWork Order#: {{model.order}}\r\n\r\nAdditional Information: {{model.info}}\r\n            </textarea>\r\n          </mat-form-field>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-button [ngxClipboard]=\'updown\'>COPY</button>\r\n          <button mat-button (click)="reset()">CLEAR</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},aWVO:function(e,t){e.exports='<headerbar>\n    <span title>{{title}}</span>\n  </headerbar>\n<br>\n<div fxLayout="row">\n  <div fxFlexOffset="5%" fxFlex="45%">\n    <mat-tab-group dynamicHeight="true">\n      <mat-tab label="Template">\n        <br>\n        <div fxLayout="row">\n          <div fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <input matInput [(ngModel)]="model.date" name="currentdate" [matDatepicker]="currentDatepicker" placeholder="Current Date">\n              <mat-datepicker-toggle matSuffix [for]="currentDatepicker"></mat-datepicker-toggle>\n              <mat-datepicker #currentDatepicker></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div fxFlexOffset="2%" fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <input [(ngModel)]="model.account" name="account" matInput placeholder="Account Number" >\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxLayout="row">\n          <div fxFlex="49%">\n            <mat-form-field class="security-full-width">\n                <input [(ngModel)]="model.name" name="name" matInput placeholder="Customer\'s Name" >\n              </mat-form-field>\n          </div>\n          <div fxFlexOffset="2%" fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <input [(ngModel)]="model.address" name="address" matInput placeholder="Address" >\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxLayout="row">\n          <div fxFlex="49%">\n            <mat-form-field class="security-full-width">\n                <input [(ngModel)]="model.contactname" name="contactName" matInput placeholder="Contact Name" >\n              </mat-form-field>\n          </div>\n          <div fxFlexOffset="2%" fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <input [(ngModel)]="model.id" name="id" matInput placeholder="Identification Number" >\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxLayout="row">\n            <div fxFlex="49%">\n              <mat-form-field class="security-full-width">\n                  <input [(ngModel)]="model.primaryContact" name="primaryContact" matInput placeholder="Primary Contact Number" >\n                </mat-form-field>\n            </div>\n            <div fxFlexOffset="2%" fxFlex="49%">\n              <mat-form-field class="security-full-width">\n                <input [(ngModel)]="model.secondaryContact" name="secondaryContact" matInput placeholder="Other Contact Numbers" >\n              </mat-form-field>\n            </div>\n          </div>\n        <div fxLayout="row">\n          <div fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <mat-select [(ngModel)]="model.product" name="product" placeholder="Product">\n                <mat-option *ngFor="let product of products" [value]="product.name">{{ product.name }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlexOffset="2%" fxFlex="49%">\n            <mat-form-field class="security-full-width">\n              <input [(ngModel)]="model.coordinates" name="gps" matInput placeholder="GPS Coordinates" >\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxLayout="row">\n          <mat-form-field class="security-full-width">\n            <textarea matInput matTextareaAutosize [(ngModel)]="model.installDetails" name="details" placeholder="Installation Request Details"></textarea>\n          </mat-form-field>\n        </div>\n        <br>\n        <div fxLayout="column">\n          <h4 class="mat-h4">Billing Cycle</h4>\n          <mat-radio-group class="security-radio-group" [(ngModel)]="model.cycle">\n            <mat-radio-button class="security-radio-button" *ngFor="let cycle of cycles" [value]="cycle.value">\n              {{cycle.value}}\n            </mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </mat-tab>\n      <mat-tab label="Information">\n          <div class="security-tab-content">\n              <p>Case Title: Security Installation Request</p>\n              <p>Case Type: Security Installation</p>                   \n              <p>Assign to: Sales Admin</p>\n            </div>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n  <div fxFlexOffset="5%" fxFlex="44%">\n      <mat-card>\n        <mat-card-title>{{title}} Template Preview</mat-card-title>\n        <mat-card-content>\n          <mat-form-field class="security-full-width">\n            <textarea #security matInput matTextareaAutosize readonly>Date Stamp: {{model.date | date: \'mediumDate\'}}\n\nCRM #: {{model.account}}\n                  \nCustomer Name: {{model.name}}\n                  \nAddress: {{model.address}}\n                  \nID #: {{model.id}}\n                  \nPrimary Contact Name: {{model.contactname}}\n                  \nPrimary Contact #: {{model.primaryContact}}\n  \nContact: {{model.secondaryContact}}\n  \nProduct: {{model.product}}\n  \nInstallation Request Details: {{model.installDetails}}\n\nGPS Coordinates: {{model.coordinates}}\n  \nBilling Cycle: {{model.cycle}}</textarea>\n          </mat-form-field>\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-button [ngxClipboard]=\'security\'>COPY</button>\n          <button mat-button (click)="reset()">CLEAR</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n</div>'},asm7:function(e,t){e.exports='<headerbar>\r\n  <span title>{{title}}</span>\r\n</headerbar>\r\n<br>\r\n<div fxlayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="31%">\r\n        <mat-form-field class="highspeed-full-width">\r\n          <mat-select [(ngModel)]="user.title" name="title" placeholder="Professional\'s Title">\r\n            <mat-option *ngFor="let title of titles" [value]="title.value">{{ title.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="31%">\r\n        <mat-form-field class="highspeed-full-width">\r\n          <input [(ngModel)]="user.firstname" name="firstname" matInput placeholder="Professional\'s Firstname" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="31%">\r\n        <mat-form-field class="highspeed-full-width">\r\n          <input [(ngModel)]="user.lastname" name="lastname" matInput placeholder="Professional\'s Lastname" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <mat-form-field class="highspeed-full-width">\r\n        <input [(ngModel)]="model.cusname" name="cusname" matInput placeholder="Customer\'s Name" >\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <mat-form-field class="highspeed-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.info" name="info" placeholder="Response"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="highspeed-full-width">\r\n          <textarea #highspeed matInput matTextareaAutosize readonly>Dear {{model.cusname}},\r\n\r\nThank you for contacting us at Amplia Communications.\r\n\r\nMy name is {{user.title}} {{user.lastname}} and I would be assisting with your query.\r\n\r\n{{model.info}}\r\n\r\nThank you for choosing Amplia Communications.\r\n\r\nKind regards,\r\n{{user.firstname}} {{user.lastname}} on behalf of Amplia Communications Customer Care Team</textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'highspeed\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},"bFW/":function(e,t){e.exports=".headers-align .mat-expansion-panel-header-title, \r\n.headers-align .mat-expansion-panel-header-description {\r\n  -ms-flex-preferred-size: 0;\r\n      flex-basis: 0;\r\n}\r\n\r\n.headers-align .mat-expansion-panel-header-description {\r\n  -webkit-box-pack: justify;\r\n      -ms-flex-pack: justify;\r\n          justify-content: space-between;\r\n  -webkit-box-align: center;\r\n      -ms-flex-align: center;\r\n          align-items: center;\r\n}"},fVsw:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n</headerbar>\r\n<br>\r\n<div fxlayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <form>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="payment-full-width">\r\n            <input [(ngModel)]="model.invoice" name="invoice" matInput placeholder="Invoice Number" >\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset=2% fxFlex="49%">\r\n          <mat-form-field class="payment-full-width">\r\n            <input matInput [(ngModel)]="model.date" name="date" [matDatepicker]="myDatepicker" placeholder="Date Invoice Paid">\r\n            <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\r\n            <mat-datepicker #myDatepicker></mat-datepicker>\r\n          </mat-form-field>          \r\n        </div>\r\n      </div>\r\n      <div fxLayout="row">\r\n        <div fxFlex="49%">\r\n          <mat-form-field class="payment-full-width">\r\n            <input [(ngModel)]="model.amount" name="amount" matInput placeholder="Amount Paid" >\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlexOffset="2%" fxFlex="49%">\r\n          <mat-form-field class="payment-full-width">\r\n            <input [(ngModel)]="model.receipt" name="receipt" matInput placeholder="Receipt Number" >\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <mat-form-field class="payment-full-width">\r\n        <textarea matInput matTextareaAutosize [(ngModel)]="model.comments" name="comments" placeholder="Additional Comments"></textarea>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="payment-full-width">\r\n          <textarea #payment matInput matTextareaAutosize readonly>Invoice Number: {{model.invoice}}\r\n\r\nDate Invoice Paid: {{model.date | date: \'mediumDate\'}}\r\n\r\nAmount Paid: ${{model.amount}}\r\n\r\nReceipt Number: {{model.receipt}}\r\n\r\nAdditional Comments: {{model.comments}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'payment\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},i1wr:function(e,t){e.exports='<headerbar>\r\n  <span title>{{title}}</span>\r\n</headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="addon-full-width">\r\n          <mat-select multiple [(ngModel)]="model.addon" name="addon" placeholder="Add-on Requested">\r\n            <mat-option *ngFor="let addon of addons" [value]="addon.name">{{ addon.name }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="addon-full-width">\r\n          <mat-select [(ngModel)]="model.promotion" name="promotion" placeholder="Promotional Period" >\r\n            <mat-option *ngFor="let promotion of promotions" [value]="promotion.value">{{ promotion.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="addon-full-width">\r\n          <input [(ngModel)]="model.basePackage" name="package" matInput placeholder="Base Package" [matAutocomplete]="base">\r\n          <mat-autocomplete #base="matAutocomplete">\r\n              <mat-option *ngFor="let package of packages" [value]="package.name">{{ package.name }}</mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="addon-full-width">\r\n          <mat-select [(ngModel)]="model.verified" name="verified" placeholder="I.D Verified">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="addon-full-width">\r\n          <textarea #addon matInput matTextareaAutosize readonly>Add-on Requested: {{model.addon}}\r\n\r\nPromotional Period: {{model.promotion}}\r\n\r\nBase Package: {{model.basePackage}}\r\n\r\nI.D. Verified: {{model.verified}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'addon\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n'},ljLh:function(e,t){e.exports='<headerbar>\n  <span title>Case Templates</span>\n</headerbar>\n<br>\n<div fxLayout="column">\n  <div fxLayout="row" fxLayoutAlign="center">\n    <h1 class="mat-display-2">Welcome</h1>\n  </div>\n  <div fxLayout="row" fxLayoutAlign="center" fxFlex="80%">\n    <mat-card>\n      <mat-card-title>Applications and Utilities</mat-card-title>\n      <div fxLayout="row">\n        <div fxLayout="row" fxFlex="49%">\n          <mat-nav-list>\n            <a mat-list-item href="https://login.microsoftonline.com" target="_blank"> <mat-icon matListIcon>mail</mat-icon>EMAIL</a>\n            <a mat-list-item href="http://mcl-vm2-crm/MassyCommunicationsLtd/main.aspx#849628433" target="_blank"><mat-icon matListIcon>contacts</mat-icon>CRM</a>\n            <a mat-list-item href="http://tableau.massycommunications.com/" target="_blank"><mat-icon matListIcon>work</mat-icon>TABLEAU</a>\n            <a mat-list-item href="http://provisioning.massycommunications.com:8080/webclient/" target="_blank"><mat-icon matListIcon>build</mat-icon>DLO</a>\n          </mat-nav-list>\n        </div>\n        <div fxLayout="row" fxFlex="49%" fxFlexOffset="2%">\n          <mat-nav-list>        \n            <a mat-list-item href="https://fieldservice.massycommunications.com/dispatchFS/" target="_blank"><mat-icon matListIcon>local_shipping</mat-icon>FIELD SERVICE</a>\n            <a mat-list-item href="https://garfield.massycommunications.com/MCL_610/getPhoneNumber/1" target="_blank"><mat-icon matListIcon>call</mat-icon> GARFIELD</a>\n            <a mat-list-item href="https://citrix-access.tstt.co.tt/" target="_blank"><mat-icon matListIcon>vpn_key</mat-icon> TSTT CITRIX</a>\n            <a mat-list-item href="https://ampliatt.sharepoint.com/:x:/s/AmpliaCommunicationLtd/ER3q_9JLATFLmDNBs0SSaEoB_vXMg2lwLiqkzzET7bMQWQ?e=4%3AQ6cJNt" target="_blank"><mat-icon matListIcon>description</mat-icon>ASK MY SUPERVISOR</a>\n          </mat-nav-list>\n        </div>\n      </div>  \n    </mat-card>\n  </div>\n\n  \x3c!-- <div fxLayout="column" fxFlex="90%" fxLayoutAlign="center">\n    <div fxLayout="row" fxFlex="100%" fxLayoutAlign="center">\n      <button mat-button (click)="crm()">CRM</button>\n    </div>\n  </div>  --\x3e\n</div>\n  \n\n'},nDWZ:function(e,t){e.exports='<mat-toolbar color="primary">\r\n  <ng-content select="[title]"></ng-content>\r\n  <span class="toolbar-spacer"></span>\r\n  \r\n  <button mat-icon-button [routerLink]="[\'/home\']">\r\n    <mat-icon>home</mat-icon>  \r\n  </button>\r\n\r\n  <button mat-icon-button [matMenuTriggerFor]="mapmenu">\r\n    <mat-icon>map</mat-icon>\r\n  </button>\r\n  <mat-menu #mapmenu="matMenu">\r\n    <button mat-menu-item (click)="feederMap()">\r\n      <mat-icon>place</mat-icon>\r\n      <span>Feeder Map</span>\r\n    </button>\r\n    <button mat-menu-item (click)="surepayMap()">\r\n      <mat-icon>place</mat-icon>\r\n      <span>Surepay Map</span>\r\n    </button>\r\n  </mat-menu>\r\n\r\n  \x3c!-- <button mat-icon-button [matMenuTriggerFor]="menu">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu="matMenu">\r\n      \r\n      <button mat-menu-item disabled (click)="openDialog()">\r\n        <mat-icon>account_circle</mat-icon>\r\n        <span>Contact List</span>\r\n      </button>\r\n      <button mat-menu-item disabled (click)="openCallMaster()">\r\n        <mat-icon>account_circle</mat-icon>\r\n        <span>Call Master Prices</span>\r\n      </button>\r\n      <button mat-menu-item disabled>\r\n        <mat-icon>monetization_on</mat-icon>\r\n        <span>Bundle Calculator</span>\r\n      </button>\r\n    </mat-menu>   --\x3e\r\n</mat-toolbar>\r\n'},nyJ1:function(e,t){e.exports=".work-full-width {\r\n  width: 100%;\r\n}\r\n"},okgc:function(e,t){e.exports="html, body, material-app, md-sidenav-container, .my-content {\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nmd-card {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.my-full-width {\r\n  width: 100%\r\n}\r\n"},ongl:function(e,t){e.exports=".addon-full-width {\r\n  width: 100%;\r\n}\r\n"},ovDy:function(e,t){e.exports='<headerbar>\n  <span title>{{title}}</span>\n</headerbar>\n<br>\n<div fxLayout="row">\n  <div fxFlexOffset="5%" fxFlex="45%">\n    <div fxLayout="row">\n      <div fxFlex="100%">\n        <mat-form-field class="voice-full-width">\n          <mat-select multiple [(ngModel)]="model.featureAdded" name="added" placeholder="Feature Requested">\n            <mat-option *ngFor="let feature of features" [value]="feature.name">{{ feature.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div fxLayout="row">\n      <div fxFlex="49%">\n        <mat-form-field class="voice-full-width">\n          <mat-select [(ngModel)]="model.cost" name="cost" placeholder="Customer Agreed to Cost of Feature?">\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div fxFlexOffset="2%" fxFlex="49%">\n        <mat-form-field class="voice-full-width">\n          <mat-select [(ngModel)]="model.crm" name="crm" placeholder="Feature added in CRM?">\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div fxLayout="row">\n      <div fxFlex="100%">\n        <mat-form-field class="voice-full-width">\n          <mat-select multiple [(ngModel)]="model.featureRemoved" name="removed" placeholder="Feature Requested to be Removed">\n            <mat-option *ngFor="let feature of features" [value]="feature.name">{{ feature.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div fxLayout="row">\n      <div fxFlex="49%">\n        <mat-form-field class="voice-full-width">\n          <mat-select [(ngModel)]="model.verified" name="verified" placeholder="ID Verified">\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div fxFlexOffset="2%" fxFlex="49%">\n        <mat-form-field class="voice-full-width">\n          <input [(ngModel)]="model.serviceNumber" name="serviceNumber" matInput placeholder="Service Number" >\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div fxFlexOffset="5%" fxFlex="44%">\n      <mat-card>\n        <mat-card-title>{{ title }} Template Preview</mat-card-title>\n          <mat-card-content>\n            <mat-form-field class="voice-full-width">\n              <textarea #voicefeature matInput matTextareaAutosize readonly>Feature Requested: {{model.featureAdded}}\n\nCustomer Agreed to Cost of Feature?: {{model.cost}}\n\nFeature added in CRM?: {{model.crm}}\n\nFeature Requested to be Removed: {{model.featureRemoved}}\n\nID Verified: {{model.verified}} \n\nService Number: {{model.serviceNumber}}</textarea>\n            </mat-form-field>\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-button [ngxClipboard]=\'voicefeature\'>COPY</button>\n            <button mat-button (click)="reset()">CLEAR</button>\n            <button mat-button (click)="form()">FORM</button>\n            <button mat-button (click)="spreadsheet()">SPREADSHEET</button>\n          </mat-card-actions>\n      </mat-card>\n    </div>\n</div>'},r7uo:function(e,t){e.exports=".voice-full-width {\r\n    width: 100%;\r\n  }"},rqsB:function(e,t){e.exports=".updown-full-width {\r\n  width: 100%;\r\n}\r\n"},"s4+W":function(e,t){e.exports="<p>\n  pricing-list works!\n</p>\n"},uNJk:function(e,t){e.exports=".rebate-full-width {\r\n  width: 100%;\r\n}\r\n"},v4Y2:function(e,t){e.exports=""},x35b:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n("WT6e"),o=n("4PVY"),i=n("OE0E"),l=n("7DMc"),d=n("bfOx"),m=n("Bj4q"),s=n("DUFE"),c=n("8tOD"),f=n("RsmO"),p=n("vit7"),u=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},h=(function(){}(),[{name:"Account Number/Balance Query",url:"/billing"},{name:"Add-on Package Request",url:"/addon"},{name:"CSP Technical",url:"/csp"},{name:"High Speed",url:"/highspeed"},{name:"Loyalty Points",url:"/loyalty"},{name:"Missing Payment",url:"/payment"},{name:"Port Forwarding",url:"/portforwarding"},{name:"Rebate Request",url:"/rebate"},{name:"Relocation",url:"/relocation"},{name:"Retention",url:"/retention"},{name:"Security",url:"/security"},{name:"Technical",url:"/technical"},{name:"Technical (Voice)",url:"/technical-voice"},{name:"Upgrade/Downgrade",url:"/upgradedowngrade"},{name:"Voice Features",url:"/voicefeatures"},{name:"Work Order",url:"/workorder"}]),v=function(){function e(){this.title="Case Templates",this.templates=h}return e=u([Object(r.n)({selector:"app-root",template:n("5xMp"),styles:[n("okgc")]})],e)}(),x=this&&this.__extends||(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),g=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return x(t,e),t.prototype.format=function(e,t){if("input"===t){var n=e.getDate(),a=e.getMonth()+1;return e.getFullYear()+"-"+a+"-"+n}return e.toDateString()},t}(s.y),y=function(){function e(){this.handlers={}}return e.prototype.shouldDetach=function(e){return console.debug("CustomReuseStrategy:shouldDetach",e),!0},e.prototype.store=function(e,t){console.debug("CustomReuseStrategy:store",e,t),this.handlers[e.routeConfig.path]=t},e.prototype.shouldAttach=function(e){return console.debug("CustomReuseStrategy:shouldAttach",e),!!e.routeConfig&&!!this.handlers[e.routeConfig.path]},e.prototype.retrieve=function(e){return console.debug("CustomReuseStrategy:retrieve",e),e.routeConfig?this.handlers[e.routeConfig.path]:null},e.prototype.shouldReuseRoute=function(e,t){return console.debug("CustomReuseStrategy:shouldReuseRoute",e,t),e.routeConfig===t.routeConfig},e}(),b=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},w=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},F=function(){function e(){this.cycles=[{value:"2nd to 1st"},{value:"16th to 15th"},{value:"25th to 24th"}]}return e=b([Object(r.C)(),w("design:paramtypes",[])],e)}(),A=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},k=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},P=function(){function e(){this.addons=[{name:"N/A"},{name:" Catch Up TV: Watch More",value:30},{name:" Catch Up TV: Free",value:0},{name:" FOX Premium",value:75},{name:" HBO",value:75},{name:" HBO & MAX Combo",value:90},{name:" MAX",value:45},{name:" MaxPak",value:30},{name:" Premium Sports",value:60},{name:" Watch Adult",value:120}],this.packages=[{name:"Surf A Little",value:175,type:"Internet",bundle:!1,available:!1},{name:"Surf Some more",value:200,type:"Internet",bundle:!0,available:!0,discount:50},{name:"Surf More",value:250,type:"Internet",bundle:!1,available:!1},{name:"Surf A Lot",value:390,type:"Internet",bundle:!0,available:!0,discount:75},{name:"Surf A Lot More",value:550,type:"Internet",bundle:!0,available:!0,discount:100},{name:"Surf It All",value:700,type:"Internet",bundle:!0,available:!0,discount:125},{name:"Watch More",value:350,type:"IPTV",bundle:!0,available:!0},{name:"Watch A Lot",value:450,type:"IPTV",bundle:!0,available:!0},{name:"Watch A Lot More",value:550,type:"IPTV",bundle:!0,available:!0},{name:"Watch It All",value:700,type:"IPTV",bundle:!0,available:!0},{name:"Watch, Surf and Save Just a Little",value:250,type:"Bundle",available:!1},{name:"Watch, Surf and Save a Little More",value:500,type:"Bundle",available:!0},{name:"Watch, Surf and Save a Little More with PVR 9000",value:520,type:"Bundle",available:!0},{name:"Watch, Surf and Save a Lot",value:765,type:"Bundle",available:!0},{name:"Watch, Surf and Save a Lot More",value:1e3,type:"Bundle",available:!0},{name:"Watch, Surf and Save It All",value:1275,type:"Bundle",available:!0},{name:"Surf Some More, Watch More",value:500},{name:"Surf Some More, Watch More with PVR 9000",value:520},{name:"Surf Some More, Watch A Lot",value:600},{name:"Surf Some More, Watch A Lot More",value:700},{name:"Surf Some More, Watch It All",value:850},{name:"Surf A Lot, Watch More",value:665},{name:"Surf A Lot, Watch More with PVR 9000",value:685},{name:"Surf A Lot, Watch A Lot",value:765},{name:"Surf A Lot, Watch A Lot More",value:865},{name:"Surf A Lot, Watch it All",value:1015},{name:"Surf A Lot More, Watch More",value:800},{name:"Surf A Lot More, Watch More with PVR 9000",value:820},{name:"Surf A Lot More, Watch A Lot",value:900},{name:"Surf A Lot More, Watch A Lot More",value:1e3},{name:"Surf A Lot More, Watch it All",value:1150},{name:"Surf It All, Watch More",value:925},{name:"Surf It All, Watch More with PVR 9000",value:945},{name:"Surf It All, Watch A Lot",value:1025},{name:"Surf It All, Watch A Lot More",value:1125},{name:"Surf It All Plus, Watch It All",value:1275}],this.VAT=1.125,this.CALL_MASTER=[{name:"Caller ID",price:14*this.VAT,interval:"Month",description:"Allows a person to identify the number of the phone from which the call is being made"},{name:"Caller ID with Anonymous caller rejection",price:14*this.VAT,interval:"Month",description:"Allows a person to identify the number of the phone from which the call is being made"},{name:"Alert Call",price:3*this.VAT,interval:"Month",description:"Generates a call to a pre-designed number for help without dialing"},{name:"Automatic Redial",price:14*this.VAT,interval:"Month",description:"Automatically redials a number that is busy until the line is free"},{name:"Call Forward Don't Answer",price:6*this.VAT,interval:"Month",description:"Calls automatically transferred from your phone to a pre-designated number upon no answer"},{name:"Call forward Busy",price:6*this.VAT,interval:"Month",description:"Calls automatically transferred from your phone to a pre-designated number upon no answer"},{name:"Call trace",price:5*this.VAT,interval:"Activation",description:"Callers who activate Hold Number Delivery can have their number traced by for the persons receiving the call"},{name:"Call trace - noama",price:5*this.VAT,interval:"Activation",description:"Callers who activate Hold Number Delivery can have their number traced by for the persons receiving the call"},{name:"Hold call waiting",price:3*this.VAT,interval:"Month",description:'If a person has call waiting, this option allows to temporarily cancel "call waiting" feature on a "per call\' basis'},{name:"My call 1st",price:8*this.VAT,interval:"Month",description:"Allows a person to tell who an incoming call is for by listening to its unique ring"},{name:"My call 2nd",price:2*this.VAT,interval:"Month",description:"Allows a person to tell who an incoming call is for by listening to its unique ring"},{name:"My call 3rd",price:2*this.VAT,interval:"Month",description:"Allows a person to tell who an incoming call is for by listening to its unique ring"},{name:"Return call",price:14*this.VAT,interval:"Month",description:"Allows a person to know who called when the telephone stops ringing before you have had time to answer"},{name:"Speed calling 30",price:6*this.VAT,interval:"Month",description:"A user can program up to 30 frequently used numbers into the telephone for quick calling"},{name:"Speed calling 8",price:8*this.VAT,interval:"Month",description:"A user can program up to 8 frequently used numbers into the telephone for quick calling"},{name:"Anonymous caller rejection",price:14*this.VAT,interval:"Month",description:"Automatically rejects anonymous calls"},{name:"Call forwarding",price:6*this.VAT,interval:"Month",description:"Manually sets calls to be forwarded to another number"},{name:"Call Waiting",price:6*this.VAT,interval:"Month",description:"Allows two incoming calls on one line"},{name:"Three way calling",price:6*this.VAT,interval:"Month",description:"Allows three parties together on three different phones for personal or business purposes"},{name:"Voice Mail Basic",price:12*this.VAT,interval:"Month",description:""},{name:"Voice Mail Full Basic",price:15*this.VAT,interval:"Month",description:""},{name:"Voice Mail Plus",price:25*this.VAT,interval:"Month",description:""},{name:"Voice Security package with Caller ID",price:19*this.VAT,interval:"Month",description:"Package with 4 features of Caller ID, Call waiting, Hold number delivery and Alert call"},{name:"Voice Security package with Return call",price:19*this.VAT,interval:"Month",description:"Package with 4 features of Return call, Call waiting, Hold number delivery and Alert call"},{name:"Voice Personality package with Caller ID",price:19*this.VAT,interval:"Month",description:"Package with 4 features of Caller ID, Call waiting, 3 way calling and Speed calling (8)"},{name:"Voice Personality package with Return call",price:19*this.VAT,interval:"Month",description:"Package with 4 features of Return call, Call waiting, 3 way calling and Speed calling (8)"},{name:"Voice Conference package with Caller ID",price:19*this.VAT,interval:"Month",description:"Package with 4 features of Caller ID, Call waiting, 3 way calling and Call forwarding"},{name:"Voice Conference package with Return Call",price:18*this.VAT,interval:"Month",description:"Package with 4 features of Return call, Call waiting, 3 way calling and Call forwarding"}],this.SECURE=[{name:"Silver"},{name:"Silver with Rapid Response"},{name:"Gold"},{name:"Gold with Rapid Response"}]}return e=A([Object(r.C)(),k("design:paramtypes",[])],e)}(),R=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},I=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},M=function(){return function(e,t,n,a,r,o,i,l,d,m,s,c,f,p,u,h,v,x,g,y){this.internet=e,this.iptv=t,this.serial=n,this.voice=a,this.profile=r,this.routes=o,this.date=i,this.description=l,this.steps=d,this.results=m,this.stb=s,this.alarms=c,this.bundle=f,this.attachments=p,this.port1=u,this.port2=h,this.port3=v,this.port4=x,this.ghz24=g,this.ghz5=y}}(),O=function(){function e(){this.title="Technical",this.model=new M("","",""),this.password="f1r3b0x@3ng",this.options=[{value:"N/A"},{value:"Yes"},{value:"No"}],this.profiles=[{value:"NONE"},{value:"TR069"},{value:"INTERNET"}]}return e.prototype.reset=function(){this.model=new M("","","")},e.prototype.ngOnInit=function(){},e=R([Object(r.n)({selector:"technical-form",template:n("zNkN"),styles:[n("EKpD")]}),I("design:paramtypes",[])],e)}(),C=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},T=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},L=function(){return function(e,t,n,a,r,o,i,l){this.ipaddress=e,this.lan=t,this.ports=n,this.connectedONT=a,this.dmz=r,this.staticIP=o,this.router=i,this.routerIP=l}}(),S=function(){function e(){this.title="Port Forwarding",this.model=new L("",""),this.lans=["LAN 1","LAN 2","LAN 3","LAN 4"]}return e.prototype.reset=function(){this.model=new L("","")},e.prototype.ngOnInit=function(){},e=C([Object(r.n)({selector:"forwarding-form",template:n("x5c2"),styles:[n("MVUB")]}),T("design:paramtypes",[])],e)}(),N=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},D=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},_=function(){return function(e,t,n,a,r){this.card=e,this.description=t,this.invoice=n,this.date=a,this.amountPaid=r}}(),j=function(){function e(){this.title="Massy Loyalty Points",this.model=new _(0,"")}return e.prototype.reset=function(){this.model=new _(0,"")},e.prototype.ngOnInit=function(){},e=N([Object(r.n)({selector:"loyalty-form",template:n("FJBP"),styles:[n("KQd6")]}),D("design:paramtypes",[])],e)}(),V=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},E=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},z=function(){return function(e,t,n,a,r,o,i){this.issue=e,this.date=t,this.iptv=n,this.internet=a,this.voice=r,this.info=o,this.both=i}}(),B=function(){function e(){this.title="CSP Technical",this.model=new z("N/A"),this.serviceIssues=[{value:"Internet"},{value:"IPTV"},{value:"Voice"}]}return e.prototype.reset=function(){this.model=new z("")},e.prototype.ngOnInit=function(){},e=V([Object(r.n)({selector:"csp-form",template:n("LX5Y"),styles:[n("14gY")]}),E("design:paramtypes",[])],e)}(),W=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},q=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Y=function(){return function(e,t,n,a,r){this.invoice=e,this.date=t,this.amount=n,this.receipt=a,this.comments=r}}(),H=function(){function e(){this.title="Missing Payment",this.model=new Y("")}return e.prototype.reset=function(){this.model=new Y("")},e.prototype.ngOnInit=function(){},e=W([Object(r.n)({selector:"payment-form",template:n("fVsw"),styles:[n("x91g")]}),q("design:paramtypes",[])],e)}(),U=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},J=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},K=function(){return function(e,t,n,a,r,o){this.balance=e,this.due=t,this.cycle=n,this.account=a,this.verified=r,this.comments=o}}(),G=function(){function e(e){this.cycleService=e,this.title="Account Number/Balance Query",this.model=new K,this.cycles=[],this.options=[{value:"No"},{value:"Yes"}]}return e.prototype.reset=function(){this.model=new K},e.prototype.ngOnInit=function(){this.cycles=this.cycleService.cycles},e=U([Object(r.n)({selector:"billing-form",template:n("XFdh"),styles:[n("YRnQ")]}),J("design:paramtypes",[F])],e)}(),Q=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},X=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Z=function(){return function(e,t,n,a,r,o,i,l,d,m,s,c,f){this.cycle=e,this.area=t,this.oldPackage=n,this.oldAddons=a,this.newPackage=r,this.newAddons=o,this.installDate=i,this.removalDate=l,this.bundle=d,this.rebate=m,this.calculation=s,this.amount=c,this.info=f}}(),$=function(){function e(e,t){this.cycleService=e,this.packageService=t,this.title="Relocation",this.model=new Z,this.test=!1,this.options=[{value:"No"},{value:"Yes"}],this.cycles=[],this.addons=[],this.packages=[],this.existingControl=new l.b}return e.prototype.ngOnInit=function(){this.cycles=this.cycleService.cycles,this.addons=this.packageService.addons,this.packages=this.packageService.packages},e.prototype.reset=function(){this.model=new Z},e=Q([Object(r.n)({selector:"app-relocation-form",template:n("Ki9q"),styles:[n("Epgv")]}),X("design:paramtypes",[F,P])],e)}(),ee=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},te=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ne=function(){return function(e,t,n,a,r,o,i,l){this.stb=e,this.pvr=t,this.addons=n,this.oldBundle=a,this.newBundle=r,this.onsite=o,this.info=i,this.order=l}}(),ae=function(){function e(e){this.packageService=e,this.title="Upgrade / Downgrade",this.model=new ne,this.addons=[],this.packages=[],this.count=[0,1,2,3,4,5,6,7,8,9,10,11,12],this.options=[{value:"No"},{value:"Yes"}]}return e.prototype.ngOnInit=function(){this.addons=this.packageService.addons,this.packages=this.packageService.packages},e.prototype.reset=function(){this.model=new ne},e=ee([Object(r.n)({selector:"updown-form",template:n("YhhR"),styles:[n("rqsB")]}),te("design:paramtypes",[P])],e)}(),re=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},oe=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ie=function(){return function(e,t,n,a){this.summary=e,this.history=t,this.results=n,this.recommendations=a}}(),le=function(){function e(){this.title="Work Order",this.model=new ie("")}return e.prototype.ngOnInit=function(){},e.prototype.reset=function(){this.model=new ie("")},e=re([Object(r.n)({selector:"app-work-form",template:n("xDt9"),styles:[n("nyJ1")]}),oe("design:paramtypes",[])],e)}(),de=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},me=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},se=function(){return function(e,t){this.cusname=e,this.info=t}}(),ce=function(){return function(e,t,n){this.title=e,this.firstname=t,this.lastname=n}}(),fe=function(){function e(){this.title="High Speed",this.model=new se,this.user=new ce,this.titles=[{value:"Mr."},{value:"Ms."},{value:"Mrs."}]}return e.prototype.ngOnInit=function(){},e.prototype.reset=function(){this.model=new se},e=de([Object(r.n)({selector:"highspeed-form",template:n("asm7"),styles:[n("46tx")]}),me("design:paramtypes",[])],e)}(),pe=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},ue=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},he=function(){return function(e,t,n,a,r,o){this.existingPackage=e,this.promotion=t,this.balance=n,this.reason=a,this.save=r,this.saveCase=o}}(),ve=function(){function e(){this.title="Retention",this.model=new he("")}return e.prototype.ngOnInit=function(){},e.prototype.reset=function(){this.model=new he("")},e=pe([Object(r.n)({selector:"retention-form",template:n("1nyp"),styles:[n("RMud")]}),ue("design:paramtypes",[])],e)}(),xe=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},ge=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ye=function(){return function(e,t,n,a){this.addon=e,this.promotion=t,this.basePackage=n,this.verified=a}}(),be=function(){function e(e){this.packageService=e,this.model=new ye,this.title="Add-on Package Request",this.addons=[],this.packages=[],this.promotions=[{value:"N/A"},{value:" 50% off Fox Premium for 3 months"},{value:" 50% off HBO & MAX Combo for 3 months"}],this.options=[{value:"No"},{value:"Yes"}]}return e.prototype.ngOnInit=function(){this.addons=this.packageService.addons,this.packages=this.packageService.packages},e.prototype.reset=function(){this.model=new ye},e=xe([Object(r.n)({selector:"addon-form",template:n("i1wr"),styles:[n("ongl")]}),ge("design:paramtypes",[P])],e)}(),we=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Fe=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ae=function(){return function(e,t,n,a,r,o,i,l,d){this.cycle=e,this.invoice=t,this.amount=n,this.servicePackage=a,this.addons=r,this.stb=o,this.pvr=i,this.description=l,this.rebate=d}}(),ke=function(){return function(e,t,n,a,r,o,i,l){this.serPackage=e,this.serPackagePromotions=t,this.addons=n,this.addonsPromotions=a,this.stb=r,this.pvr=o,this.startDate=i,this.endDate=l}}(),Pe=function(){function e(e,t){this.cycleService=e,this.packageService=t,this.title="Rebate",this.cycles=[],this.model=new Ae,this.modelCalculator=new ke,this.addons=[],this.packages=[],this.calcAddons=[],this.calcPackages=[],this.count=[0,1,2,3,4,5,6,7,8,9,10,11,12],this.days=+this.modelCalculator.startDate-+this.modelCalculator.endDate,this.da=this.modelCalculator.startDate}return e.prototype.ngOnInit=function(){this.cycles=this.cycleService.cycles,this.addons=this.packageService.addons,this.packages=this.packageService.packages,this.calcAddons=this.packageService.addons,this.calcPackages=this.packageService.packages},e.prototype.reset=function(){this.model=new Ae,this.modelCalculator=new ke},e=we([Object(r.n)({selector:"rebate-form",template:n("XqUv"),styles:[n("uNJk")]}),Fe("design:paramtypes",[F,P])],e)}(),Re=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Ie=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Me=function(){function e(e){this.thisDialogRef=e,this.contactCentreLeaders=[{employeeName:"Romona Boisselle-Romano",position:"Manager",extension:"2400"},{employeeName:"Phyllis Charles-Downes",position:"Team Lead",extension:"2401"},{employeeName:"Kimlyn Vance",position:"Team Lead",extension:"2402"},{employeeName:"Jeremy Chapman",position:"Team Lead",extension:"2418"}],this.seniorTSP=[{employeeName:"Jerome McClean",position:"Senior Technical Support Professional",extension:"2409"},{employeeName:"Nicholas Conliffe",position:"Senior Technical Support Professional",extension:"2426"}],this.tsp=[{employeeName:"Andrew Lewis",position:"Technical Support Professional",extension:"2464"},{employeeName:"Christopher Seetahal",position:"Technical Support Professional",extension:"2410"},{employeeName:"Jevon Duncan",position:"Technical Support Professional",extension:"2462"},{employeeName:"Nafeeza Ali",position:"Technical Support Professional",extension:"2463"},{employeeName:"Nicholas De Souza",position:"Technical Support Professional",extension:"2466"},{employeeName:"Nivash Roopchansingh",position:"Technical Support Professional",extension:"2411"},{employeeName:"Rhesa-Addi Kendall",position:"Technical Support Professional",extension:"2468"},{employeeName:"Peter Hosein",position:"Technical Support Professional",extension:"2423"},{employeeName:"Yinka-Marie Jones",position:"Technical Support Professional",extension:"2430"}],this.csp=[{employeeName:"Cassie Browne",position:"Customer Support Professional",extension:"2422"},{employeeName:"Isaiah Farrell",position:"Customer Support Professional",extension:"2428"},{employeeName:"Tiffany Lewis",position:"Customer Support Professional",extension:"2433"}],this.dispatch=[{employeeName:"Bridget Rattan",position:"Manager, Planning and Design",extension:"2940"},{employeeName:"Allyster Duntin",position:"Dispatcher",extension:"2417"},{employeeName:"Don-Leon Powder",position:"Dispatcher",extension:"2434"},{employeeName:"Keron Ragbirsingh",position:"Dispatcher",extension:"2413"},{employeeName:"Kerry Phillips",position:"Dispatcher",extension:"2435"},{employeeName:"Krystian Perry",position:"Dispatcher",extension:"2414"},{employeeName:"Marvin Baptiste",position:"Dispatcher",extension:""}],this.noc=[{employeeName:"NOC Technician 1",position:"NOC Technician",extension:"2530"},{employeeName:"NOC Technician 2",position:"NOC Technician",extension:"2531"}],this.salesResidential=[{employeeName:"Delise Redmond",position:"Telesales Agent",extension:"2106"},{employeeName:"Fabian Nancoo",position:"Telesales Agent",extension:"2111"},{employeeName:"Kitwana Williams",position:"Telesales Agent",extension:"2100"},{employeeName:"Nyland Young",position:"Telesales Agent",extension:"2432"}],this.salesExecutive=[{employeeName:"Anesa Paladee",position:"Executive Sales",extension:"2602"},{employeeName:"Natasha Williams-Hinkson",position:"Executive Sales",extension:"2601"}],this.finance=[{employeeName:"Shelly-Ann Narine",position:"Billing Assurance Officer",extension:"2703"},{employeeName:"Robert Farrier",position:"Manager, Credit & Collections",extension:"2706"},{employeeName:"Vrinda Moonasar",position:"Credit Assistant",extension:"2707"}],this.it=[{employeeName:"Jessel Ackbarali",position:"Manager",extension:"2300"},{employeeName:"Lackeshwar Bachan",position:"Applications Consultant",extension:"2301"},{employeeName:"Sean St. John",position:"IT Specialist",extension:"2302"},{employeeName:"Gerard Valere",position:"IT Specialist",extension:"2303"}],this.misc=[{employeeName:"Mickal Pierre",position:"Marketing Assistant",extension:"2197"},{employeeName:"Quanah Patino",position:"Product Lead",extension:"2105"},{employeeName:"Vanessa Mohammed",position:"Director of First Impression",extension:"3004"}],this.hr=[{employeeName:"Kandia Brown",position:"Senior HR Officer/Human Resource Manager",extension:"2800"},{employeeName:"Nekita Skair",position:"Human Resource Assistant",extension:"2801"}]}return e.prototype.ngOnInit=function(){},e=Re([Object(r.n)({selector:"contact-list",template:n("J84j"),styles:[n("bFW/")]}),Ie("design:paramtypes",[s.h])],e)}(),Oe=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Ce=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Te=function(){function e(e,t){this.contactList=e,this.callMaster=t}return e.prototype.ngOnInit=function(){},e.prototype.feederMap=function(){window.open("https://www.google.com/maps/d/viewer?mid=1XII2dGmmObI_xvcXV2ARWTvPuaY","_blank")},e.prototype.surepayMap=function(){window.open("https://www.google.com/maps/d/u/0/viewer?mid=1FjSB2T6KufyHo8q29pph27_B8jM&hl=en","_blank")},e.prototype.openDialog=function(){this.contactList.open(Me,{width:"40%"})},e.prototype.openCallMaster=function(){},Oe([Object(r.F)("title"),Ce("design:type",String)],e.prototype,"titleName",void 0),e=Oe([Object(r.n)({selector:"headerbar",template:n("nDWZ"),styles:[n("2nZa")]}),Ce("design:paramtypes",[s.g,s.g])],e)}(),Le=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Se=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ne=function(){function e(){}return e.prototype.ngOnInit=function(){},e.prototype.crm=function(){window.open("http://mcl-vm2-crm/MassyCommunicationsLtd/main.aspx#849628433","_blank")},e.prototype.dlo=function(){window.open("http://provisioning.massycommunications.com:8080/webclient/","_blank")},e.prototype.fieldService=function(){window.open("https://fieldservice.massycommunications.com/dispatchFS/","_blank")},e.prototype.garfield=function(){window.open("https://garfield.massycommunications.com/MCL_610/getPhoneNumber/1","_blank")},e.prototype.tableau=function(){window.open("http://tableau.massycommunications.com/","_blank")},e.prototype.mail=function(){window.open("http://tableau.massycommunications.com/","_blank")},e.prototype.citrix=function(){window.open("https://citrix-access.tstt.co.tt/","_blank")},e=Le([Object(r.n)({selector:"home",template:n("ljLh"),styles:[n("MyHe")]}),Se("design:paramtypes",[])],e)}(),De=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},_e=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},je=function(){function e(){}return e.prototype.ngOnInit=function(){},e=De([Object(r.n)({selector:"app-pricing-list",template:n("s4+W"),styles:[n("v4Y2")],encapsulation:r._15.None}),_e("design:paramtypes",[])],e)}(),Ve=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Ee=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ze=function(){return function(e,t,n,a,r,o){this.featureAdded=e,this.cost=t,this.crm=n,this.featureRemoved=a,this.verified=r,this.serviceNumber=o}}(),Be=function(){function e(e){this.packageService=e,this.title="Voice Features",this.features=[],this.options=[{value:"No"},{value:"Yes"}],this.model=new ze}return e.prototype.reset=function(){this.model=new ze},e.prototype.form=function(){window.open("https://forms.office.com/Pages/ResponsePage.aspx?id=3MWU6NdhVEOBCcOS4Y4JQv4Oe3XapBxHj3uU7rqlpzxUMk5ENVpQWDczNENPRUQwVjdKNFFWRk5OQy4u","_blank")},e.prototype.spreadsheet=function(){window.open("https://ampliatt-my.sharepoint.com/:x:/g/personal/nicholas_desouza_amplia_co_tt/ETM-PfR8R6hMqx0EsF7OmggBUsbeOj7olsS26XzEoFqp6Q?e=7YUDs2","_blank")},e.prototype.ngOnInit=function(){this.features=this.packageService.CALL_MASTER},e=Ve([Object(r.n)({selector:"app-voice-features",template:n("ovDy"),styles:[n("r7uo")],encapsulation:r._15.None}),Ee("design:paramtypes",[P])],e)}(),We=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},qe=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ye=function(){return function(e,t,n,a,r,o,i,l,d,m,s,c){this.date=e,this.account=t,this.name=n,this.address=a,this.id=r,this.contactname=o,this.primaryContact=i,this.secondaryContact=l,this.product=d,this.installDetails=m,this.coordinates=s,this.cycle=c}}(),He=function(){function e(e,t){this.packageService=e,this.billing=t,this.title="Security",this.model=new Ye,this.cycles=[],this.products=[]}return e.prototype.reset=function(){this.model=new Ye},e.prototype.ngOnInit=function(){this.products=this.packageService.SECURE,this.cycles=this.billing.cycles},e=We([Object(r.n)({selector:"security",template:n("aWVO"),styles:[n("QEU/")]}),qe("design:paramtypes",[P,F])],e)}(),Ue=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Je=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ke=function(){return function(e,t,n,a,r,o,i,l,d,m,s,c,f,p,u,h,v){this.serial=e,this.phoneType=t,this.phoneNumber=n,this.software=a,this.xml=r,this.preconfig=o,this.pots=i,this.mac=l,this.dhcp=d,this.tel1=m,this.handset=s,this.registered=c,this.make=f,this.receive=p,this.dunned=u,this.uni=h,this.voip=v}}(),Ge=function(){function e(){this.title="Voice Technical",this.model=new Ke,this.options=["No","Yes"],this.phoneType=["VTech cordless - AMPLIA supplied","bMobile corded - AMPLIA supplied","Personal Device - wireless","Personal Device - wired"]}return e.prototype.ngOnInit=function(){},e.prototype.reset=function(){this.model=new Ke},e=Ue([Object(r.n)({selector:"technical-voice",template:n("/GLF"),styles:[n("K8sn")]}),Je("design:paramtypes",[])],e)}(),Qe=this&&this.__decorate||function(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},Xe=function(){function e(){}return e=Qe([Object(r.K)({declarations:[v,O,S,j,B,H,G,$,ae,le,fe,ve,be,Pe,Te,Ne,Me,je,Be,He,Ge],imports:[i.a,f.a,p.a,l.d,d.b.forRoot([{path:"",redirectTo:"home",pathMatch:"full"},{path:"billing",component:G},{path:"technical",component:O},{path:"portforwarding",component:S},{path:"loyalty",component:j},{path:"csp",component:B},{path:"payment",component:H},{path:"relocation",component:$},{path:"upgradedowngrade",component:ae},{path:"workorder",component:le},{path:"highspeed",component:fe},{path:"retention",component:ve},{path:"addon",component:be},{path:"rebate",component:Pe},{path:"home",component:Ne},{path:"voicefeatures",component:Be},{path:"security",component:He},{path:"technical-voice",component:Ge}]),m.a,s.c,s.e,s.r,s.k,s.w,s.s,s.n,s.m,s.d,s.f,s.p,s.t,s.x,s.l,s.o,s.b,c.b,s.j,s.u,s.q,s.v,s.i],providers:[{provide:r.I,useValue:"en-GB"},{provide:s.a,useClass:g},{provide:d.a,useClass:y},F,P],entryComponents:[Me],bootstrap:[v]})],e)}();Object(r._18)(),Object(o.a)().bootstrapModule(Xe)},x5c2:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    \x3c!-- <form #portForwarding="ngForm"> --\x3e\r\n      <div fxLayout="column">\r\n        <h2 class="mat-h4">*Primary Option (Bridge Port Request)</h2>\r\n        <h4 class="mat-h4">1. What LAN Port is the Device connected to on the ONT?</h4>\r\n        <mat-radio-group class="example-radio-group" [(ngModel)]="model.lan">\r\n            <mat-radio-button class="example-radio-button" *ngFor="let lan of lans" [value]="lan">\r\n              {{lan}}\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n      </div>\r\n      <br>\r\n      <h2 class="mat-h4">*Secondary Option (Port Forwarding Request) </h2>\r\n      <h4 class="mat-h4">2. What are the ports that you need forwarded and to what IP address or addresses?</h4>\r\n      <table class="forward-full-width" cellspacing="2"><tr>\r\n          <td><mat-form-field class="forward-full-width" id="ports">\r\n            <input [(ngModel)]="model.ports" name="ports" matInput placeholder="Ports" >\r\n          </mat-form-field></td>\r\n          <td><mat-form-field class="forward-full-width" id="ipaddress">\r\n            <input [(ngModel)]="model.ipaddress" name="ipaddress" matInput required placeholder="IP Address">\r\n          </mat-form-field></td>\r\n        </tr></table>\r\n      <p>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea [(ngModel)]="model.dmz" name="dmz" matInput matTextareaAutosize placeholder="3. If it\u2019s a DMZ request, what is the IP address that you need in the DMZ?"></textarea>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea [(ngModel)]="model.connectedONT" name="ONT" matInput matTextareaAutosize placeholder="4. Is the DVR directly connected to the ONT?"></textarea>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea [(ngModel)]="model.staticIP" name="staticIP" matInput matTextareaAutosize placeholder="5. If Yes to question 3, then did you set a static IP address on the DVR or is it DHCP?"></textarea>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea [(ngModel)]="model.router" name="router" matInput matTextareaAutosize placeholder="6. If No to question 3, then is it connected to a router or switch?"></textarea>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea [(ngModel)]="model.routerIP" name="routerIP" matInput matTextareaAutosize placeholder="7. If DVR is connected directly to a router, then we need the IP address of the router and the ports?"></textarea>\r\n        </mat-form-field>\r\n      </p>\r\n    \x3c!-- </form> --\x3e\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="forward-full-width">\r\n          <textarea #forward matInput matTextareaAutosize readonly>*Primary Option (Bridge Port Request)\r\nWhat LAN Port is the Device connected to on the ONT?\r\n{{ model.lan }}\r\n\r\n*Secondary Option (Port Forwarding Request)\r\nWhat are the ports that you need forwarded and to what IP address or addresses?\r\nPorts: {{model.ports}}    IP Address: {{ model.ipaddress }}\r\n\r\nIf it\u2019s a DMZ request, what is the IP address that you need in the DMZ?\r\nIP Address: {{ model.dmz }}\r\n\r\nIs the DVR directly connected to the ONT?\r\n{{ model.connectedONT }}\r\n\r\nIf Yes to question 3, then did you set a static IP address on the DVR or is it DHCP?\r\n{{ model.staticIP }}\r\n\r\nIf No to question 3, then is it connected to a router or switch?\r\n{{ model.router }}\r\n\r\nIf DVR is connected directly to a router, then we need the IP address of the router and the ports?\r\n{{ model.routerIP }}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'forward\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n    \x3c!-- <div fxLayout="row">\r\n      <button mat-raised-button [ngxClipboard]=\'forward\'>Copy</button>\r\n      <div fxFlexOffset="5%">\r\n        <button mat-raised-button (click)="reset()">Clear</button>\r\n      </div>\r\n    </div> --\x3e\r\n  </div>\r\n</div>\r\n'},x91g:function(e,t){e.exports=".payment-full-width {\r\n  width: 100%;\r\n}\r\n"},xDt9:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <mat-form-field class="work-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.summary" name="summary" placeholder="Summary"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="work-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.history" name="history" placeholder="History"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="work-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.results" name="results" placeholder="Test Results"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="work-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.recommendations" name="recommendations" placeholder="Recommendations"></textarea>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="work-full-width">\r\n          <textarea #work matInput matTextareaAutosize readonly>Summary: {{model.summary}}\r\n\r\nHistory: {{model.history}}\r\n\r\nTest Results: {{model.results}}\r\n\r\nRecommendations: {{model.recommendations}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'work\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n'},zNkN:function(e,t){e.exports='<headerbar>\r\n    <span title>{{title}}</span>\r\n  </headerbar>\r\n<br>\r\n<div fxLayout="row">\r\n  <div fxFlexOffset="5%" fxFlex="45%">\r\n    <div fxLayout="row">\r\n      <div fxFlex="33%">\r\n        <mat-form-field class="technical-full-width">\r\n          <mat-select [(ngModel)]="model.internet" name="internet" placeholder="Internet affected?">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="31%">\r\n        <mat-form-field class="technical-full-width">\r\n          <mat-select [(ngModel)]="model.iptv" name="iptv" placeholder="IPTV affected?">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="31%">\r\n        <mat-form-field class="technical-full-width">\r\n          <mat-select [(ngModel)]="model.voice" name="voice" placeholder="Voice affected?">\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.serial" name="serial" matInput placeholder="ONT Serial Number" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input matInput [(ngModel)]="model.date" name="date" [matDatepicker]="myDatepicker" placeholder="Date issue first surfaced?">\r\n          <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\r\n          <mat-datepicker #myDatepicker></mat-datepicker>\r\n        </mat-form-field>        \r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <mat-select multiple [(ngModel)]="model.profile" name="profile" placeholder="WAN Profiles">\r\n            <mat-option *ngFor="let profile of profiles" [value]="profile.value">{{ profile.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <mat-select [(ngModel)]="model.routes" name="routes" placeholder="Routes on ONT?" >\r\n            <mat-option *ngFor="let option of options" [value]="option.value">{{ option.value }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.description" name="description" placeholder="Description of the issue"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.steps" name="steps" placeholder="Steps taken to resolve the issue"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.results" name="results" placeholder="Results of steps taken"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.stb" name="stb" placeholder="STB MAC Information"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.alarms" name="alarms" placeholder="Tableau / Alarm Analysis"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.bundle" name="bundle" placeholder="Bundle number if customer has service in more than one location"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class="technical-full-width">\r\n      <textarea matInput matTextareaAutosize [(ngModel)]="model.attachments" name="attachments" placeholder="Attachments (DLO/AMSLogs screenshots)"></textarea>\r\n    </mat-form-field>\r\n    <h4 class="mat-h4">Customer network setup details:</h4>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.port1" name="port1" matInput placeholder="Port 1" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.port2" name="port2" matInput placeholder="Port 2" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.port3" name="port3" matInput placeholder="Port 3" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.port4" name="port4" matInput placeholder="Port 4" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout="row">\r\n      <div fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.ghz24" name="ghz24" matInput placeholder="2.4 Ghz" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlexOffset="2%" fxFlex="49%">\r\n        <mat-form-field class="technical-full-width">\r\n          <input [(ngModel)]="model.ghz5" name="ghz5" matInput placeholder="5 Ghz" >\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlexOffset="5%" fxFlex="44%">\r\n    <mat-card>\r\n      <mat-card-title>{{title}} Template Preview</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field class="technical-full-width">\r\n          <textarea #technical matInput matTextareaAutosize readonly>Is the Internet service affected?: {{model.internet}}\r\n\r\nIs the IPTV service affected?: {{model.iptv}}\r\n\r\nIs the Voice Service affected?: {{model.voice}}\r\n\r\nDescription of the issue: {{model.description}}\r\n\r\nDate when the issue first surfaced: {{model.date | date: \'mediumDate\'}}\r\n\r\nSteps taken to resolve the issue: {{model.steps}}\r\n\r\nResults of the steps taken: {{model.results}}\r\n\r\nONT Serial Number: {{model.serial}}\r\n\r\nBundle Number: {{model.bundle}}\r\n\r\nSTB MAC Information: {{model.stb}}\r\n\r\nRoutes on the ONT: {{model.routes}}\r\n\r\nWAN Profiles: {{model.profile}}\r\n\r\nCustomer network setup details:\r\nPort 1: {{model.port1}}\r\nPort 2: {{model.port2}}\r\nPort 3: {{model.port3}}\r\nPort 4: {{model.port4}}\r\n2.4 Ghz: {{model.ghz24}}\r\n5 Ghz: {{model.ghz5}}\r\n\r\nTableau / Alarm Analysis: {{model.alarms}}\r\n\r\nAttachments: {{model.attachments}}\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button [ngxClipboard]=\'technical\'>COPY</button>\r\n        <button mat-button (click)="reset()">CLEAR</button>\r\n        <button mat-button [ngxClipboard]=\'pw\'>NOTHING TO SEE HERE</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <div fxLayout="row">\r\n      <div fxFlex="100%">\r\n        \r\n      </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<mat-form-field class="offscreen" aria-hidden=true>\r\n  <input #pw name="card" matInput value={{password}} aria-hidden=true>\r\n</mat-form-field>'}},[0]);